# Assuming your pylearn is installed in ABC folder.

# YAML like below assumes you have saved the data in required format in the PYLEARN2_DATA_PATH ( check with "${PYLEARN2_DATA_PATH}") folder.
# YAML below points to the mnist.py (containing MNIST class) script in ABC/pylearn2/datasets folder.
# You must read the mnist.py file as it shows you where it expects the data and what else is required.
# rest all code is just the initiallization of the parameters

# ALL the problems are trained by the Train class in ABC/pylearn2/train.py script.
# and then we call
# >> train.py ourYAMLfile.yaml

# "train" (object, &train) points to the dataset initiallized by
#    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
#        which_set: 'train',
#        one_hot: 1,
#        start: 0,
#        stop: 50000

# All mostly the data will be in CSV format, read "forCSVfiles.yaml" yaml file

!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: 'train',
        one_hot: 1,
        start: 0,
        stop: 50000
}
,
    model: !obj:pylearn2.models.softmax_regression.SoftmaxRegression {
    n_classes: 10,
    irange: 0.,
    nvis: 784,
}
,
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD {
        batch_size: 10000,
        line_search_mode: 'exhaustive',
        conjugate: 1,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'train',
                              one_hot: 1,
                              start: 50000,
                              stop:  60000
                          },
                'test'  : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass"
        }
    }
,
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "softmax_regression_best.pkl"
        },
    ],
    save_path: "softmax_regression.pkl",
    save_freq: 1
}
